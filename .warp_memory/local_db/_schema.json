{
  "_Schema": {
    "schema": {
      "id": "schema",
      "content": "# Enhanced Schema with Hierarchical Tasks, Scope Resolution, and Time-Based Traversal\n\n# Generic Entity interface for polymorphic relationships\ninterface Entity {\n  id: ID!\n}\n\n# Time-related types\ntype TimePoint {\n  id: ID!\n  timestamp: DateTime!\n  entityId: String!\n  entityType: String!\n  eventType: TimeEventType!\n  metadata: String\n}\n\n# Scope hierarchy types\ntype Organization implements Entity {\n  id: ID!\n  name: String!\n  description: String\n  createdAt: DateTime\n  modifiedAt: DateTime\n  teams: [Team]\n  projects: [Project]\n  rules: [Rule]\n  workflows: [Workflow]\n  personas: [Persona]\n}\n\ntype Team implements Entity {\n  id: ID!\n  name: String!\n  description: String\n  createdAt: DateTime\n  modifiedAt: DateTime\n  organization: Organization\n  users: [User]\n  projects: [Project]\n  rules: [Rule]\n  workflows: [Workflow]\n  personas: [Persona]\n}\n\ntype User implements Entity {\n  id: ID!\n  name: String!\n  email: String\n  role: String\n  createdAt: DateTime\n  modifiedAt: DateTime\n  team: Team\n  rules: [Rule]\n  workflows: [Workflow]\n  personas: [Persona]\n}\n\n# Project updated\ntype Project implements Entity {\n  id: ID!\n  name: String!\n  description: String\n  rootPath: String\n  createdAt: DateTime\n  modifiedAt: DateTime\n  organization: Organization\n  team: Team\n  tasks: [Task]\n  rules: [Rule]\n  workflows: [Workflow]\n  personas: [Persona]\n}\n\n# Unified Task structure with TaskLevel\ntype Task implements Entity {\n  id: ID!\n  title: String!\n  description: String\n  taskLevel: TaskLevel!\n  status: TaskStatus\n  priority: Int\n  scopeContext: String # JSON with userId, projectId, teamId, orgId\n  createdAt: DateTime\n  updatedAt: DateTime\n  completedAt: DateTime\n  project: Project\n  parentTask: Task\n  childTasks: [Task]\n  dependencies: [Task]\n  dependedOnBy: [Task]\n  guidedByStep: WorkflowStep\n  requirements: [Requirement]\n  designSpecs: [DesignSpec]\n  assignedTo: AgentInstance\n}\n\n# Deprecated but kept for backward compatibility\ntype SubTask implements Entity {\n  id: ID!\n  title: String!\n  description: String\n  status: TaskStatus\n  type: SubTaskType\n  parentTask: Task!\n  dependencies: [SubTask]\n  assignedRole: AgentRole\n  assignedTo: AgentInstance\n  createdAt: DateTime\n  updatedAt: DateTime\n  ckgLinks: [String]\n  commandDetails: String\n  codeChanges: [CodeChange]\n}\n\n# Workflow definitions\ntype Workflow implements Entity {\n  id: ID!\n  name: String!\n  description: String\n  appliesToTaskType: TaskLevel!\n  scope: ScopeLevel!\n  isActive: Boolean!\n  version: String\n  createdAt: DateTime\n  modifiedAt: DateTime\n  appliesTo: [Project]\n  steps: [WorkflowStep]\n}\n\ntype WorkflowStep implements Entity {\n  id: ID!\n  name: String!\n  description: String\n  stepOrder: Int!\n  workflow: Workflow\n  requiredRole: AgentRole\n  expectedSubTaskType: SubTaskType\n  isOptional: Boolean\n  createdAt: DateTime\n  modifiedAt: DateTime\n  nextStep: WorkflowStep\n  previousStep: WorkflowStep\n  tasksGuidedByThisStep: [Task]\n}\n\n# Updated Agent\ntype AgentInstance implements Entity {\n  id: ID!\n  role: AgentRole!\n  status: AgentStatus!\n  contextSize: Int\n  createdAt: DateTime!\n  lastActiveAt: DateTime\n  handledTasks: [Task]\n  handledSubTasks: [SubTask] # For backward compatibility\n  activeContext: String\n}\n\n# Rule with scope\ntype Rule implements Entity {\n  id: ID!\n  name: String!\n  description: String\n  ruleType: RuleType\n  content: String!\n  scope: ScopeLevel!\n  isActive: Boolean!\n  createdAt: DateTime\n  modifiedAt: DateTime\n  appliesTo: [Project]\n  appliesForRoles: [AgentRole]\n}\n\n# Persona with scope\ntype Persona implements Entity {\n  id: ID!\n  role: AgentRole!\n  description: String!\n  promptTemplate: String!\n  scope: ScopeLevel!\n  isActive: Boolean!\n  createdAt: DateTime\n  modifiedAt: DateTime\n  project: Project\n}\n\n# Other entities updated to implement Entity interface\ntype Requirement implements Entity {\n  id: ID!\n  title: String!\n  description: String!\n  task: Task\n  priority: Int\n  status: RequirementStatus\n  createdAt: DateTime\n  modifiedAt: DateTime\n}\n\ntype DesignSpec implements Entity {\n  id: ID!\n  title: String!\n  content: String!\n  task: Task\n  createdAt: DateTime\n  updatedAt: DateTime\n  approvedAt: DateTime\n  approvedBy: String\n}\n\ntype ArchDecision implements Entity {\n  id: ID!\n  title: String!\n  description: String!\n  rationale: String\n  alternatives: String\n  createdAt: DateTime\n  task: Task\n}\n\ntype File implements Entity {\n  id: ID!\n  path: String!\n  content: String\n  fileType: String\n  lastModified: DateTime\n  functions: [Function]\n  classes: [Class]\n  interfaces: [Interface]\n}\n\ntype Function implements Entity {\n  id: ID!\n  name: String!\n  signature: String!\n  description: String\n  file: File!\n  calls: [Function]\n  calledBy: [Function]\n}\n\ntype Class implements Entity {\n  id: ID!\n  name: String!\n  description: String\n  file: File!\n  implements: [Interface]\n  methods: [Function]\n}\n\ntype Interface implements Entity {\n  id: ID!\n  name: String!\n  description: String\n  file: File!\n  implementedBy: [Class]\n}\n\ntype TestPlan implements Entity {\n  id: ID!\n  title: String!\n  description: String\n  task: Task\n  testCases: [TestCase]\n  createdAt: DateTime\n  modifiedAt: DateTime\n}\n\ntype TestCase implements Entity {\n  id: ID!\n  title: String!\n  description: String\n  steps: String\n  expectedResult: String\n  testPlan: TestPlan\n  status: TestStatus\n  bugReports: [BugReport]\n  createdAt: DateTime\n  modifiedAt: DateTime\n}\n\ntype BugReport implements Entity {\n  id: ID!\n  title: String!\n  description: String!\n  severity: BugSeverity!\n  status: BugStatus!\n  testCase: TestCase\n  createdAt: DateTime\n  resolvedAt: DateTime\n  assignedTo: AgentInstance\n}\n\ntype CodeChange implements Entity {\n  id: ID!\n  path: String!\n  diff: String!\n  description: String\n  subTask: SubTask\n  task: Task # For hierarchical structure\n  createdAt: DateTime\n  status: CodeChangeStatus\n}\n\ntype HITLInteraction implements Entity {\n  id: ID!\n  type: HITLType!\n  message: String!\n  metadata: String\n  status: HITLStatus!\n  createdAt: DateTime!\n  respondedAt: DateTime\n  relatedTask: Task\n  relatedSubTask: SubTask\n}\n\n# Enums\nenum TaskLevel {\n  PROJECT\n  MILESTONE\n  TASK\n  SUBTASK\n}\n\nenum TaskStatus {\n  TODO\n  DECOMPOSING\n  AWAITING_PLAN_REVIEW\n  IN_PROGRESS\n  BLOCKED\n  DONE\n  ERROR\n}\n\nenum SubTaskType {\n  CODE\n  COMMAND\n  DESIGN\n  REVIEW\n  TEST\n}\n\nenum AgentRole {\n  ORCHESTRATOR\n  PRODUCT_LEAD\n  DESIGN_ENGINEER\n  FRONTEND_ENGINEER\n  BACKEND_ENGINEER\n  QA_TESTER\n}\n\nenum AgentStatus {\n  IDLE\n  BUSY\n  ERROR\n  TERMINATED\n}\n\nenum RuleType {\n  CODE_STANDARD\n  ARCHITECTURE\n  NAMING_CONVENTION\n  SECURITY\n  TESTING\n  WORKFLOW\n}\n\nenum ScopeLevel {\n  DEFAULT\n  ORG\n  TEAM\n  PROJECT\n  USER\n}\n\nenum RequirementStatus {\n  DRAFT\n  APPROVED\n  IMPLEMENTED\n  VERIFIED\n}\n\nenum TestStatus {\n  NOT_STARTED\n  IN_PROGRESS\n  PASSED\n  FAILED\n}\n\nenum BugSeverity {\n  LOW\n  MEDIUM\n  HIGH\n  CRITICAL\n}\n\nenum BugStatus {\n  OPEN\n  IN_PROGRESS\n  RESOLVED\n  VERIFIED\n  WONT_FIX\n}\n\nenum CodeChangeStatus {\n  PENDING_REVIEW\n  APPROVED\n  REJECTED\n  MERGED\n}\n\nenum HITLType {\n  PLAN_REVIEW\n  COMMAND_APPROVAL\n  CODE_REVIEW\n  QA_SIGNOFF\n  FINAL_APPROVAL\n}\n\nenum HITLStatus {\n  PENDING\n  APPROVED\n  REJECTED\n  TIMED_OUT\n}\n\nenum TimeEventType {\n  CREATION\n  MODIFICATION\n  STATUS_CHANGE\n  APPROVAL\n  REJECTION\n  COMPLETION\n  RESOLUTION\n  AGENT_ACTIVITY\n  TERMINATION\n  RESPONSE\n}\n\n# Define DateTime scalar type\nscalar DateTime\n",
      "updatedAt": "2025-04-23T07:37:32.582Z"
    }
  }
}